name: Storybook

on:
  push:
    branches:
      - develop
    paths:
      - 'src/components/**/*.tsx'
  pull_request:
    branches:
      - develop
    paths:
      - 'src/components/**/*.tsx'
  workflow_dispatch:
    inputs:
      skip-vrt:
        description: Only build and deploy storybook
        required: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  prepare-vrt:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write
    if: ${{ github.event.inputs.skip-vrt != 'true' }}
    env: 
      REG_SUIT_CLIENT_ID: ${{ secrets.REG_SUIT_CLIENT_ID }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
      - name: Check commit hash
        id: commithash
        run: echo 'hash=$(git rev-parse HEAD)' >> $GITHUB_OUTPUT
      - name: restore reg-suit screenshots
        uses: actions/cache@v3
        with:
          path: .reg/
          key: reg-${{ steps.commithash.outputs.hash }}
      - name: Check file existence
        id: check-files
        uses: andstor/file-existence-action@v2
        with:
          files: '.reg/'
      - name: Install on main branch
        if: steps.check-files.outputs.files_exists == 'false'
        uses: ./.github/actions/setup-node-and-restore-packages
      - name: Setup puppeteer
        if: steps.check-files.outputs.files_exists == 'false'
        uses: ./.github/actions/setup-puppeteer
      - name: Build Storybook on main branch
        if: steps.check-files.outputs.files_exists == 'false'
        run: pnpm run build-storybook
      - name: Screenshots on main branch
        if: steps.check-files.outputs.files_exists == 'false'
        run: pnpm screenshot
      - name: Run reg-suit on main branch
        if: steps.check-files.outputs.files_exists == 'false'
        run: pnpm exec reg-suit run
      - name: Set reg-suit expected
        if: steps.check-files.outputs.files_exists == 'false'
        run: |
          rm -rf .reg/expected/
          mv -f .reg/actual/ .reg/expected/
          mkdir .reg/actual/
          ls -l .reg/
      - name: Upload .reg/
        if: steps.check-files.outputs.files_exists == 'false'
        uses: actions/upload-artifact@v3
        with:
          name: reg-expected
          path: .reg/

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ !contains(github.event.pull_request.body, '[skip ci]') }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node-and-restore-packages    
      - uses: actions/cache@v3
        name: Setup storybook cache
        id: storybook-cache
        with:
          path: ${{ env.STORYBOOK_PATH }}
          key: storybook-${{ github.sha }}
          restore-keys: |
            storybook-
        env: 
          STORYBOOK_PATH: 'storybook-staic'
      - name: Build storybook
        run: pnpm run build-storybook
      - uses: actions/upload-pages-artifact@v1
        with:
          path: storybook-static
  
  deploy:
    timeout-minutes: 5
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
  
  
  vrt:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 5
    permissions:
      contents: read
      pull-requests: write
    if: ${{ github.event.inputs.skip-vrt != 'true' }}
    env: 
      REG_SUIT_CLIENT_ID: ${{ secrets.REG_SUIT_CLIENT_ID }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Setup Node and restore pacakges
        uses: ./.github/actions/setup-node-and-restore-packages
      - name: Setup puppeteer
        uses: ./.github/actions/setup-puppeteer
      - name: workaround for detached HEAD
        run: |
          git checkout ${GITHUB_REF#refs/heads/} || git checkout -b ${GITHUB_REF#refs/heads/} && git pull
      - name: Load reg-suit expecteds
        uses: actions/download-artifact@v3
        with:
          name: reg-expected
          path: .reg/
      - name: Restore storybook
        id: storybook-cache
        uses: actions/cache/restore@v3
        with:
          path: ${{ env.STORYBOOK_PATH }}
          key: storybook-${{ github.sha }}
          restore-keys: |
            storybook-
        env: 
          STORYBOOK_PATH: 'storybook-staic'
      - name: Check cache hit
        if: steps.storybook-cache.outputs.cache-hit != 'true'
        run: exit 1
      - name: Capture screenshots
        run: pnpm screenshot
      - name: Run reg-suit
        run: pnpm exec reg-suit run
      - name: Upload reg-suit
        uses: actions/upload-artifact@v3
        with:
          name: Visual regression test result
          path: .reg/

  set-status: 
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - uses: actions/checkout@v3
    - name: Set status
      uses: Sibz/github-status-action@v1
      with: 
        authToken: ${{ secrets.GITHUB_TOKEN }}
        context: 'GitHub Pages'
        description: 'Deployment has completed'
        state: 'success'
        sha: ${{ github.event.pull_request.head.sha || github.sha }}
        target_url: ${{ needs.deploy.outputs.url }}

